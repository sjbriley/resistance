# importing base image
FROM python:3.9.6-alpine

# create directory for user app
# create user 'app' and group 'app' with no permission
RUN mkdir -p /home/app && \
    addgroup --gid 1001 --system app && \
    adduser --shell /bin/false --disabled-password --uid 1001 --system -G app app

# Create the home directory and set home to /web
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME && \
    mkdir $APP_HOME/static
WORKDIR $APP_HOME

# set env variables so no writing .pyc or buffering stdout and stderr
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# copying requirement.txt file to present working directory
# also, change ownership since doing that as it's own recursive command takes forever
COPY --chown=app:app requirements.txt ./

# RUN apt-get update && sudo apt-get upgrade
# RUN python -m pip install --upgrade pip

# installing dependency in container
RUN apk add -U --no-cache \
    build-base \
    python3-dev \
    libffi-dev \
    postgresql-dev \
    gcc
    # linux-headers \
#  libressl-dev libxslt-dev ca-certificates 
RUN pip install -r requirements.txt

# copying all the files to present working directory
# also, change ownership since doing that as it's own recursive command takes forever
COPY --chown=app:app . .

# Collect static files
# RUN virtualenv/bin/python manage.py collectstatic --no-input --clear
# RUN python manage.py collectstatic --no-input --clear

# Chown all the files to the app user
RUN chown -R app:app $APP_HOME

# RUN chown app:app db.sqlite3

EXPOSE 80

# change user to app right before running
USER app